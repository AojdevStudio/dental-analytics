[project]
name = "dental-analytics"
version = "0.1.0"
description = "Simple dental analytics dashboard for KPI tracking"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "AOJDevStudio"}
]
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]

dependencies = [
    "google-auth>=2.23",
    "google-api-python-client>=2.103",
    "pandas>=2.1",
    "streamlit>=1.30",
    "watchdog>=6.0.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["backend", "frontend"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = ["--cov=backend", "--cov=frontend", "--cov-report=term-missing"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "faker>=37.6.0",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.15.0",
    "ruff>=0.12.12",
]

# Code Quality Configuration
[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.pytest_cache
    | \.ruff_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
# Enable essential linting rules
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "N",    # pep8-naming
    "S",    # flake8-bandit (security)
    "T20",  # flake8-print
    "SIM",  # flake8-simplify
    "ARG",  # flake8-unused-arguments
    "PTH",  # flake8-use-pathlib
]
# Ignore specific rules that conflict with dental analytics requirements
ignore = [
    "S101",  # Use of assert (needed for tests)
    "T201",  # Print statements (allowed in test scripts)
    "B008",  # Do not perform function calls in argument defaults
]

[tool.ruff.lint.per-file-ignores]
"test_*.py" = ["S101", "T201", "ARG001"]
"tests/*.py" = ["S101", "T201", "ARG001"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# Third-party imports without stubs
[[tool.mypy.overrides]]
module = [
    "googleapiclient.*",
    "google.oauth2.*",
    "pandas.*",
    "streamlit.*"
]
ignore_missing_imports = true
